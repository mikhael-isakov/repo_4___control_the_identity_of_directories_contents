from PyQt5.QtCore import QRect, Qt, QMetaObject, QCoreApplication  
from PyQt5.QtWidgets import QWidget, QMenuBar, QMenu, QAction, QLabel, QPushButton
from PyQt5.QtGui import QFont


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 250)
        self.centralwidget = QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QLabel(self.centralwidget)
        self.label.setGeometry(QRect(10, 10, 780, 20))
        font = QFont()
        font.setPointSize(12)
        self.label.setFont(font)
        self.label.setAlignment(Qt.AlignCenter)
        self.label.setObjectName("label")
        self.label_2 = QLabel(self.centralwidget)
        self.label_2.setGeometry(QRect(100, 30, 600, 20))
        font = QFont()
        font.setPointSize(10)
        self.label_2.setFont(font)
        self.label_2.setAlignment(Qt.AlignCenter)
        self.label_2.setObjectName("label_2")
        self.pushButton = QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QRect(30, 70, 740, 30))
        self.pushButton.setObjectName("pushButton")
        self.pushButton_2 = QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QRect(30, 100, 740, 30))
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_3 = QPushButton(self.centralwidget)
        self.pushButton_3.setGeometry(QRect(50, 150, 580, 50))
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_4 = QPushButton(self.centralwidget)
        self.pushButton_4.setGeometry(QRect(640, 150, 110, 50))
        self.pushButton_4.setObjectName("pushButton_4")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QMenuBar(MainWindow)
        self.menubar.setGeometry(QRect(0, 0, 800, 30))
        self.menubar.setObjectName("menubar")
        self.menu = QMenu(self.menubar)
        self.menu.setObjectName("menu")
        self.menu_2 = QMenu(self.menubar)
        self.menu_2.setObjectName("menu_2")
        MainWindow.setMenuBar(self.menubar)
        self.action = QAction(MainWindow)
        self.action.setObjectName("action")
        self.action_2 = QAction(MainWindow)
        self.action_2.setObjectName("action_2")
        self.action_3 = QAction(MainWindow)
        self.action_3.setObjectName("action_3")
        self.action_5 = QAction(MainWindow)
        self.action_5.setObjectName("action_5")
        self.action_6 = QAction(MainWindow)
        self.action_6.setObjectName("action_6")
        self.action_4 = QAction(MainWindow)
        self.action_4.setObjectName("action_4")
        self.action_7 = QAction(MainWindow)
        self.action_7.setObjectName("action_7")
        self.menu.addAction(self.action)
        self.menu.addAction(self.action_2)
        self.menu.addAction(self.action_3)
        self.menu.addSeparator()
        self.menu.addAction(self.action_5)
        self.menu_2.addAction(self.action_6)
        self.menu_2.addAction(self.action_4)
        self.menu_2.addAction(self.action_7)
        self.menubar.addAction(self.menu.menuAction())
        self.menubar.addAction(self.menu_2.menuAction())

        self.retranslateUi(MainWindow)
        QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "Программа верификации (односторонней, см. справку) идентичности содержимого каталогов"))
        self.label_2.setText(_translate("MainWindow", "(для всех файлов вычисляются и затем сравниваются хеши по алгоритму MD5)"))
        self.pushButton.setText(_translate("MainWindow", "исходный каталог"))
        self.pushButton_2.setText(_translate("MainWindow", "синхронизированный каталог"))
        self.pushButton_3.setText(_translate("MainWindow", "Проверить идентичность содержимого каталогов\nи записать результат в log.txt"))
        self.pushButton_4.setText(_translate("MainWindow", "Остановить\nпроверку"))
        self.menu.setTitle(_translate("MainWindow", "Файл"))
        self.menu_2.setTitle(_translate("MainWindow", "Справка"))
        self.action.setText(_translate("MainWindow", "Выбрать исходный каталог"))
        self.action_2.setText(_translate("MainWindow", "Выбрать синхронизированный каталог"))
        self.action_3.setText(_translate("MainWindow", "Проверить идентичность содержимого каталогов"))
        self.action_5.setText(_translate("MainWindow", "Выход"))
        self.action_6.setText(_translate("MainWindow", "О программе"))
        self.action_4.setText(_translate("MainWindow", "О резервном копировании методом синхронизации"))
        self.action_7.setText(_translate("MainWindow", "Об односторонней идентичности содержимого каталогов"))


